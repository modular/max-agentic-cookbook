[project]
name = "max-mcp-openai-agents-sdk"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "honcho>=2.0.0",
    "invoke>=2.2.0",
    "mcp>=1.8.1",
    "modular>=25.3.0",
    "openai-agents>=0.0.14",
]

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "ruff>=0.11.9",
]

[tool.ruff]  # Mimic behavior of Black
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = ["ANN", "ARG", "E", "F", "W"]

# Allow writing 'except:' without specifying a type
ignore = ["E722"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.flake8-annotations]
# Don't force functions that don't return anything to specify `-> None`
suppress-none-returning = true

[tool.ruff.format]  # Mimic behavior of Black
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
# Require proper handling of Optional
strict_optional = true
no_implicit_optional = true

# Skip errors on imports with no stubs
ignore_missing_imports = true

# Require explicit annotations (parameters & returns)
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_any_generics = true

# Extra checks
warn_unused_ignores = true
warn_unawaited_coroutines = true
warn_return_any = true

# Ruff provides more granular control over these
disallow_incomplete_defs = false
disallow_untyped_defs = false